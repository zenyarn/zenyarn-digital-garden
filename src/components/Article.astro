---
import { Image } from 'astro:assets';
import { render } from 'astro:content';
import { useI18n } from '../i18n/utils';
import type { AuthorContext, DocumentContext, TagsContext } from '../types';

export type Props = {
  author?: AuthorContext;
  document: DocumentContext;
  tags: TagsContext;
};

const { author, document, tags } = Astro.props;
const { data } = document;

const { t } = useI18n(Astro)

const { cover, description, subtitle, title, updated } = data;

const proseClassName = 'prose text-paragraph-foreground dark:text-paragraph-foreground-dark prose-blockquote:border-text dark:prose-blockquote:border-text-dark prose-blockquote:text-blockquote-foreground dark:prose-blockquote:text-blockquote-foreground-dark prose-code:rounded-lg prose-code:px-1 prose-code:py-0.5 prose-code:before:content-none prose-code:after:content-none prose-code:text-code-foreground dark:prose-code:text-code-foreground-dark prose-code:bg-code-background dark:prose-code:bg-code-background-dark prose-li:marker:text-li-marker-foreground dark:prose-li:marker:text-li-marker-foreground-dark prose-strong:text-strong-foreground dark:prose-strong:text-strong-foreground-dark prose-headings:text-heading-foreground dark:prose-headings:text-heading-foreground-dark dark:prose-invert lg:prose-lg xl:prose-xl 2xl:prose-2xl prose-a:text-primary prose-a:opacity-[0.7] prose-a:hover:opacity-100 prose-h1:text-article-title-foreground dark:prose-h1:article-title-foreground-dark prose-h1:font-title prose-headings:font-heading prose-p:font-paragraph prose-code:font-code prose-pre:!bg-pre-background dark:prose-pre:!bg-pre-background-dark prose-img:rounded-3xl prose-hr:border-t-2 prose-hr:border-hr-border dark:prose-hr:border-hr-border-dark';

const coverX = 'cover-x' in data ? data['cover-x'] : undefined;
const coverY = 'cover-y' in data ? data['cover-y'] : undefined;

const { Content } = await render(document);
---

<article class:list={[
  "p-4 lg:p-8 bg-article-background dark:bg-article-background-dark rounded-xl grow-1  max-w-full shadow-lg mb-6",
  proseClassName,
]}>
  <h1 class:list={[
    "text-center text-article-title-foreground dark:text-article-title-foreground-dark",
    subtitle && '!mb-2'
  ]}>{title}</h1>
  {subtitle && <h2 class="!mt-2 text-center text-subtitle-foreground dark:text-subtitle-foreground-dark opacity-60 italic">{subtitle}</h2>}
  <div class="flex flex-col lg:flex-row justify-end">
    <p class="!m-0 !mb-8 text-2xl lg:text-3xl xl:text-4xl !font-heading text-balance" set:html={description}></p>
    <div class="flex flex-col lg:items-end gap-2 w-full font-heading">
      {author && <span>{t('article.author.name', { name: author.data.name })}</span>}
      {author?.data.title && <span>{author.data.title}</span>}
      {updated && <span>{updated.toLocaleDateString('es-ES')}</span>}
      {
        tags.tags.length > 0 && (
          <div class="flex flex-wrap flex-row lg:flex-row-reverse gap-4">
            {tags.tags.map((t) => (
              <span class="border border-badge-border dark:border-badge-border-dark bg-badge-background dark:bg-badge-background-dark rounded-xl px-2 py-2 font-menu text-base text-badge-foreground dark:text-badge-foreground-dark">{t.data.name}</span>
            ))}
          </div>
        )
      }
    </div>
  </div>
  {cover && <Image src={cover} alt="" class:list={[
    "rounded-3xl shadow w-full max-h-48 lg:max-h-[30rem] object-cover",
    (coverX || coverY) ? `` : 'object-top'
  ]} style={(coverX || coverY) ? `object-position: ${coverX}% ${coverY}%;`: ''}  />}
  <Content />
</article>